# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- develop

pool:
  vmImage: 'ubuntu-latest'

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'c78e83f2-1316-4da7-9320-4db2dc98cfb1'

  # Web app name
  appName: 'gambleats'

  # Environment name
  environmentName: 'production'

  # Docker image name
  imageName: 'gambleats-front'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '14.x'
  displayName: 'Install Node.js'

- script: |
    npm install
    npm run build
  displayName: 'npm install and build'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)/build'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true
  displayName: 'Archive build artifacts'

- task: AzureRmWebAppDeployment@4
  displayName: 'Deploy to Azure App Service'
  inputs:
    azureSubscription: '$(azureSubscription)'
    appType: 'webAppLinux'
    WebAppName: '$(appName)'
    package: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'

- task: Docker@2
  displayName: 'Build and push Docker image'
  inputs:
    command: buildAndPush
    dockerFile: 'Dockerfile'
    buildContext: '$(System.DefaultWorkingDirectory)'
    containerRegistry: 'gambleatscr'
    tags: |
      $(imageName):$(Build.BuildId)
      $(imageName):latest

- task: AzureWebApp@1
  displayName: 'Deploy Docker image to Azure Web App for Containers'
  inputs:
    azureSubscription: '$(azureSubscription)'
    appType: 'webAppLinux'
    appName: '$(appName)'
    resourceGroupName: 'GamblEats'